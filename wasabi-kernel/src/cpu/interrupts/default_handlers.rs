use interrupt_fn_builder::{
    exception_page_fault_fn, panic_diverging_exception, panic_diverging_exception_with_error,
    panic_exception, panic_exception_with_error,
};
use x86_64::{
    registers::control::Cr2,
    structures::{
        idt::{InterruptDescriptorTable, InterruptStackFrame},
        paging::{mapper::TranslateResult, Translate},
    },
};

panic_exception!(divide_error);
panic_exception!(debug);
panic_exception!(non_maskable_interrupt);
panic_exception!(breakpoint);
panic_exception!(overflow);
panic_exception!(bound_range_exceeded);
panic_exception!(invalid_opcode);
panic_exception!(device_not_available);
panic_exception!(x87_floating_point);

// NOTE: double_fault is pub(super) in order to set the stack index
panic_diverging_exception_with_error!(pub(super) double_fault);
panic_diverging_exception!(machine_check);

panic_exception_with_error!(invalid_tss);
panic_exception_with_error!(segment_not_present);
panic_exception_with_error!(stack_segment_fault);
panic_exception_with_error!(general_protection_fault);
panic_exception_with_error!(alignment_check);
panic_exception_with_error!(vmm_communication_exception);
panic_exception_with_error!(security_exception);

// NOTE: page_fault is pub(super) in order to set stack index
exception_page_fault_fn!(pub(super) page_fault_handler, stack_frame, page_fault, {
    use shared::lockcell::LockCellInternal;
    let page_table = unsafe {
        // FIXME this is not save, but otherwise we might deadlock and I only want to read right
        // now, so this should be fine :shrug:
        KERNEL_PAGE_TABLE.lockcell.get_mut().assume_init_mut()
    };
    let vaddr = Cr2::read().expect("Cr2 is not a valid addr");
    if let TranslateResult::Mapped { frame, offset, flags } = page_table.translate(vaddr) {
        log::warn!(
            "PAGE FAULT: {:p}: frame: {:?}, offset: {:#X}, flags: {:#b}",
            vaddr,
            frame,
            offset,
            flags
        );
    }
    panic!(
        "PAGE FAULT:\nAccessed Address: {vaddr:p}\nError code: {page_fault:?}\n{stack_frame:#?}"
    );
});

use paste::paste;

macro_rules! int_handler_fn {
    ($int_vector:literal) => {
        paste! {
            /// interrupt handler, that calls [interrupt_handler] with the
            /// correct `interrupt_vector`.
            extern "x86-interrupt" fn [<interrupt $int_vector>](isf: InterruptStackFrame) {
                let _guard = crate::locals!().inc_interrupt();
                let int_vector: u8 = $int_vector;
                interrupt_handler(int_vector, isf);
            }
        }
    };
}

use crate::mem::page_table::KERNEL_PAGE_TABLE;

use super::interrupt_handler;

int_handler_fn!(32);
int_handler_fn!(33);
int_handler_fn!(34);
int_handler_fn!(35);
int_handler_fn!(36);
int_handler_fn!(37);
int_handler_fn!(38);
int_handler_fn!(39);
int_handler_fn!(40);
int_handler_fn!(41);
int_handler_fn!(42);
int_handler_fn!(43);
int_handler_fn!(44);
int_handler_fn!(45);
int_handler_fn!(46);
int_handler_fn!(47);
int_handler_fn!(48);
int_handler_fn!(49);
int_handler_fn!(50);
int_handler_fn!(51);
int_handler_fn!(52);
int_handler_fn!(53);
int_handler_fn!(54);
int_handler_fn!(55);
int_handler_fn!(56);
int_handler_fn!(57);
int_handler_fn!(58);
int_handler_fn!(59);
int_handler_fn!(60);
int_handler_fn!(61);
int_handler_fn!(62);
int_handler_fn!(63);
int_handler_fn!(64);
int_handler_fn!(65);
int_handler_fn!(66);
int_handler_fn!(67);
int_handler_fn!(68);
int_handler_fn!(69);
int_handler_fn!(70);
int_handler_fn!(71);
int_handler_fn!(72);
int_handler_fn!(73);
int_handler_fn!(74);
int_handler_fn!(75);
int_handler_fn!(76);
int_handler_fn!(77);
int_handler_fn!(78);
int_handler_fn!(79);
int_handler_fn!(80);
int_handler_fn!(81);
int_handler_fn!(82);
int_handler_fn!(83);
int_handler_fn!(84);
int_handler_fn!(85);
int_handler_fn!(86);
int_handler_fn!(87);
int_handler_fn!(88);
int_handler_fn!(89);
int_handler_fn!(90);
int_handler_fn!(91);
int_handler_fn!(92);
int_handler_fn!(93);
int_handler_fn!(94);
int_handler_fn!(95);
int_handler_fn!(96);
int_handler_fn!(97);
int_handler_fn!(98);
int_handler_fn!(99);
int_handler_fn!(100);
int_handler_fn!(101);
int_handler_fn!(102);
int_handler_fn!(103);
int_handler_fn!(104);
int_handler_fn!(105);
int_handler_fn!(106);
int_handler_fn!(107);
int_handler_fn!(108);
int_handler_fn!(109);
int_handler_fn!(110);
int_handler_fn!(111);
int_handler_fn!(112);
int_handler_fn!(113);
int_handler_fn!(114);
int_handler_fn!(115);
int_handler_fn!(116);
int_handler_fn!(117);
int_handler_fn!(118);
int_handler_fn!(119);
int_handler_fn!(120);
int_handler_fn!(121);
int_handler_fn!(122);
int_handler_fn!(123);
int_handler_fn!(124);
int_handler_fn!(125);
int_handler_fn!(126);
int_handler_fn!(127);
int_handler_fn!(128);
int_handler_fn!(129);
int_handler_fn!(130);
int_handler_fn!(131);
int_handler_fn!(132);
int_handler_fn!(133);
int_handler_fn!(134);
int_handler_fn!(135);
int_handler_fn!(136);
int_handler_fn!(137);
int_handler_fn!(138);
int_handler_fn!(139);
int_handler_fn!(140);
int_handler_fn!(141);
int_handler_fn!(142);
int_handler_fn!(143);
int_handler_fn!(144);
int_handler_fn!(145);
int_handler_fn!(146);
int_handler_fn!(147);
int_handler_fn!(148);
int_handler_fn!(149);
int_handler_fn!(150);
int_handler_fn!(151);
int_handler_fn!(152);
int_handler_fn!(153);
int_handler_fn!(154);
int_handler_fn!(155);
int_handler_fn!(156);
int_handler_fn!(157);
int_handler_fn!(158);
int_handler_fn!(159);
int_handler_fn!(160);
int_handler_fn!(161);
int_handler_fn!(162);
int_handler_fn!(163);
int_handler_fn!(164);
int_handler_fn!(165);
int_handler_fn!(166);
int_handler_fn!(167);
int_handler_fn!(168);
int_handler_fn!(169);
int_handler_fn!(170);
int_handler_fn!(171);
int_handler_fn!(172);
int_handler_fn!(173);
int_handler_fn!(174);
int_handler_fn!(175);
int_handler_fn!(176);
int_handler_fn!(177);
int_handler_fn!(178);
int_handler_fn!(179);
int_handler_fn!(180);
int_handler_fn!(181);
int_handler_fn!(182);
int_handler_fn!(183);
int_handler_fn!(184);
int_handler_fn!(185);
int_handler_fn!(186);
int_handler_fn!(187);
int_handler_fn!(188);
int_handler_fn!(189);
int_handler_fn!(190);
int_handler_fn!(191);
int_handler_fn!(192);
int_handler_fn!(193);
int_handler_fn!(194);
int_handler_fn!(195);
int_handler_fn!(196);
int_handler_fn!(197);
int_handler_fn!(198);
int_handler_fn!(199);
int_handler_fn!(200);
int_handler_fn!(201);
int_handler_fn!(202);
int_handler_fn!(203);
int_handler_fn!(204);
int_handler_fn!(205);
int_handler_fn!(206);
int_handler_fn!(207);
int_handler_fn!(208);
int_handler_fn!(209);
int_handler_fn!(210);
int_handler_fn!(211);
int_handler_fn!(212);
int_handler_fn!(213);
int_handler_fn!(214);
int_handler_fn!(215);
int_handler_fn!(216);
int_handler_fn!(217);
int_handler_fn!(218);
int_handler_fn!(219);
int_handler_fn!(220);
int_handler_fn!(221);
int_handler_fn!(222);
int_handler_fn!(223);
int_handler_fn!(224);
int_handler_fn!(225);
int_handler_fn!(226);
int_handler_fn!(227);
int_handler_fn!(228);
int_handler_fn!(229);
int_handler_fn!(230);
int_handler_fn!(231);
int_handler_fn!(232);
int_handler_fn!(233);
int_handler_fn!(234);
int_handler_fn!(235);
int_handler_fn!(236);
int_handler_fn!(237);
int_handler_fn!(238);
int_handler_fn!(239);
int_handler_fn!(240);
int_handler_fn!(241);
int_handler_fn!(242);
int_handler_fn!(243);
int_handler_fn!(244);
int_handler_fn!(245);
int_handler_fn!(246);
int_handler_fn!(247);
int_handler_fn!(248);
int_handler_fn!(249);
int_handler_fn!(250);
int_handler_fn!(251);
int_handler_fn!(252);
int_handler_fn!(253);
int_handler_fn!(254);
int_handler_fn!(255);

/// init all interrupt and exception handlers to panic
pub(super) fn init_all_default_interrupt_handlers(idt: &mut InterruptDescriptorTable) {
    idt.divide_error.set_handler_fn(divide_error);

    idt.debug.set_handler_fn(debug);
    idt.non_maskable_interrupt
        .set_handler_fn(non_maskable_interrupt);
    idt.breakpoint.set_handler_fn(breakpoint);
    idt.overflow.set_handler_fn(overflow);
    idt.bound_range_exceeded
        .set_handler_fn(bound_range_exceeded);
    idt.invalid_opcode.set_handler_fn(invalid_opcode);
    idt.device_not_available
        .set_handler_fn(device_not_available);

    idt.double_fault.set_handler_fn(double_fault);

    idt.invalid_tss.set_handler_fn(invalid_tss);
    idt.segment_not_present.set_handler_fn(segment_not_present);
    idt.stack_segment_fault.set_handler_fn(stack_segment_fault);
    idt.general_protection_fault
        .set_handler_fn(general_protection_fault);
    idt.alignment_check.set_handler_fn(alignment_check);
    idt.vmm_communication_exception
        .set_handler_fn(vmm_communication_exception);
    idt.security_exception.set_handler_fn(security_exception);

    idt[32].set_handler_fn(interrupt32);
    idt[33].set_handler_fn(interrupt33);
    idt[34].set_handler_fn(interrupt34);
    idt[35].set_handler_fn(interrupt35);
    idt[36].set_handler_fn(interrupt36);
    idt[37].set_handler_fn(interrupt37);
    idt[38].set_handler_fn(interrupt38);
    idt[39].set_handler_fn(interrupt39);
    idt[40].set_handler_fn(interrupt40);
    idt[41].set_handler_fn(interrupt41);
    idt[42].set_handler_fn(interrupt42);
    idt[43].set_handler_fn(interrupt43);
    idt[44].set_handler_fn(interrupt44);
    idt[45].set_handler_fn(interrupt45);
    idt[46].set_handler_fn(interrupt46);
    idt[47].set_handler_fn(interrupt47);
    idt[48].set_handler_fn(interrupt48);
    idt[49].set_handler_fn(interrupt49);
    idt[50].set_handler_fn(interrupt50);
    idt[51].set_handler_fn(interrupt51);
    idt[52].set_handler_fn(interrupt52);
    idt[53].set_handler_fn(interrupt53);
    idt[54].set_handler_fn(interrupt54);
    idt[55].set_handler_fn(interrupt55);
    idt[56].set_handler_fn(interrupt56);
    idt[57].set_handler_fn(interrupt57);
    idt[58].set_handler_fn(interrupt58);
    idt[59].set_handler_fn(interrupt59);
    idt[60].set_handler_fn(interrupt60);
    idt[61].set_handler_fn(interrupt61);
    idt[62].set_handler_fn(interrupt62);
    idt[63].set_handler_fn(interrupt63);
    idt[64].set_handler_fn(interrupt64);
    idt[65].set_handler_fn(interrupt65);
    idt[66].set_handler_fn(interrupt66);
    idt[67].set_handler_fn(interrupt67);
    idt[68].set_handler_fn(interrupt68);
    idt[69].set_handler_fn(interrupt69);
    idt[70].set_handler_fn(interrupt70);
    idt[71].set_handler_fn(interrupt71);
    idt[72].set_handler_fn(interrupt72);
    idt[73].set_handler_fn(interrupt73);
    idt[74].set_handler_fn(interrupt74);
    idt[75].set_handler_fn(interrupt75);
    idt[76].set_handler_fn(interrupt76);
    idt[77].set_handler_fn(interrupt77);
    idt[78].set_handler_fn(interrupt78);
    idt[79].set_handler_fn(interrupt79);
    idt[80].set_handler_fn(interrupt80);
    idt[81].set_handler_fn(interrupt81);
    idt[82].set_handler_fn(interrupt82);
    idt[83].set_handler_fn(interrupt83);
    idt[84].set_handler_fn(interrupt84);
    idt[85].set_handler_fn(interrupt85);
    idt[86].set_handler_fn(interrupt86);
    idt[87].set_handler_fn(interrupt87);
    idt[88].set_handler_fn(interrupt88);
    idt[89].set_handler_fn(interrupt89);
    idt[90].set_handler_fn(interrupt90);
    idt[91].set_handler_fn(interrupt91);
    idt[92].set_handler_fn(interrupt92);
    idt[93].set_handler_fn(interrupt93);
    idt[94].set_handler_fn(interrupt94);
    idt[95].set_handler_fn(interrupt95);
    idt[96].set_handler_fn(interrupt96);
    idt[97].set_handler_fn(interrupt97);
    idt[98].set_handler_fn(interrupt98);
    idt[99].set_handler_fn(interrupt99);
    idt[100].set_handler_fn(interrupt100);
    idt[101].set_handler_fn(interrupt101);
    idt[102].set_handler_fn(interrupt102);
    idt[103].set_handler_fn(interrupt103);
    idt[104].set_handler_fn(interrupt104);
    idt[105].set_handler_fn(interrupt105);
    idt[106].set_handler_fn(interrupt106);
    idt[107].set_handler_fn(interrupt107);
    idt[108].set_handler_fn(interrupt108);
    idt[109].set_handler_fn(interrupt109);
    idt[110].set_handler_fn(interrupt110);
    idt[111].set_handler_fn(interrupt111);
    idt[112].set_handler_fn(interrupt112);
    idt[113].set_handler_fn(interrupt113);
    idt[114].set_handler_fn(interrupt114);
    idt[115].set_handler_fn(interrupt115);
    idt[116].set_handler_fn(interrupt116);
    idt[117].set_handler_fn(interrupt117);
    idt[118].set_handler_fn(interrupt118);
    idt[119].set_handler_fn(interrupt119);
    idt[120].set_handler_fn(interrupt120);
    idt[121].set_handler_fn(interrupt121);
    idt[122].set_handler_fn(interrupt122);
    idt[123].set_handler_fn(interrupt123);
    idt[124].set_handler_fn(interrupt124);
    idt[125].set_handler_fn(interrupt125);
    idt[126].set_handler_fn(interrupt126);
    idt[127].set_handler_fn(interrupt127);
    idt[128].set_handler_fn(interrupt128);
    idt[129].set_handler_fn(interrupt129);
    idt[130].set_handler_fn(interrupt130);
    idt[131].set_handler_fn(interrupt131);
    idt[132].set_handler_fn(interrupt132);
    idt[133].set_handler_fn(interrupt133);
    idt[134].set_handler_fn(interrupt134);
    idt[135].set_handler_fn(interrupt135);
    idt[136].set_handler_fn(interrupt136);
    idt[137].set_handler_fn(interrupt137);
    idt[138].set_handler_fn(interrupt138);
    idt[139].set_handler_fn(interrupt139);
    idt[140].set_handler_fn(interrupt140);
    idt[141].set_handler_fn(interrupt141);
    idt[142].set_handler_fn(interrupt142);
    idt[143].set_handler_fn(interrupt143);
    idt[144].set_handler_fn(interrupt144);
    idt[145].set_handler_fn(interrupt145);
    idt[146].set_handler_fn(interrupt146);
    idt[147].set_handler_fn(interrupt147);
    idt[148].set_handler_fn(interrupt148);
    idt[149].set_handler_fn(interrupt149);
    idt[150].set_handler_fn(interrupt150);
    idt[151].set_handler_fn(interrupt151);
    idt[152].set_handler_fn(interrupt152);
    idt[153].set_handler_fn(interrupt153);
    idt[154].set_handler_fn(interrupt154);
    idt[155].set_handler_fn(interrupt155);
    idt[156].set_handler_fn(interrupt156);
    idt[157].set_handler_fn(interrupt157);
    idt[158].set_handler_fn(interrupt158);
    idt[159].set_handler_fn(interrupt159);
    idt[160].set_handler_fn(interrupt160);
    idt[161].set_handler_fn(interrupt161);
    idt[162].set_handler_fn(interrupt162);
    idt[163].set_handler_fn(interrupt163);
    idt[164].set_handler_fn(interrupt164);
    idt[165].set_handler_fn(interrupt165);
    idt[166].set_handler_fn(interrupt166);
    idt[167].set_handler_fn(interrupt167);
    idt[168].set_handler_fn(interrupt168);
    idt[169].set_handler_fn(interrupt169);
    idt[170].set_handler_fn(interrupt170);
    idt[171].set_handler_fn(interrupt171);
    idt[172].set_handler_fn(interrupt172);
    idt[173].set_handler_fn(interrupt173);
    idt[174].set_handler_fn(interrupt174);
    idt[175].set_handler_fn(interrupt175);
    idt[176].set_handler_fn(interrupt176);
    idt[177].set_handler_fn(interrupt177);
    idt[178].set_handler_fn(interrupt178);
    idt[179].set_handler_fn(interrupt179);
    idt[180].set_handler_fn(interrupt180);
    idt[181].set_handler_fn(interrupt181);
    idt[182].set_handler_fn(interrupt182);
    idt[183].set_handler_fn(interrupt183);
    idt[184].set_handler_fn(interrupt184);
    idt[185].set_handler_fn(interrupt185);
    idt[186].set_handler_fn(interrupt186);
    idt[187].set_handler_fn(interrupt187);
    idt[188].set_handler_fn(interrupt188);
    idt[189].set_handler_fn(interrupt189);
    idt[190].set_handler_fn(interrupt190);
    idt[191].set_handler_fn(interrupt191);
    idt[192].set_handler_fn(interrupt192);
    idt[193].set_handler_fn(interrupt193);
    idt[194].set_handler_fn(interrupt194);
    idt[195].set_handler_fn(interrupt195);
    idt[196].set_handler_fn(interrupt196);
    idt[197].set_handler_fn(interrupt197);
    idt[198].set_handler_fn(interrupt198);
    idt[199].set_handler_fn(interrupt199);
    idt[200].set_handler_fn(interrupt200);
    idt[201].set_handler_fn(interrupt201);
    idt[202].set_handler_fn(interrupt202);
    idt[203].set_handler_fn(interrupt203);
    idt[204].set_handler_fn(interrupt204);
    idt[205].set_handler_fn(interrupt205);
    idt[206].set_handler_fn(interrupt206);
    idt[207].set_handler_fn(interrupt207);
    idt[208].set_handler_fn(interrupt208);
    idt[209].set_handler_fn(interrupt209);
    idt[210].set_handler_fn(interrupt210);
    idt[211].set_handler_fn(interrupt211);
    idt[212].set_handler_fn(interrupt212);
    idt[213].set_handler_fn(interrupt213);
    idt[214].set_handler_fn(interrupt214);
    idt[215].set_handler_fn(interrupt215);
    idt[216].set_handler_fn(interrupt216);
    idt[217].set_handler_fn(interrupt217);
    idt[218].set_handler_fn(interrupt218);
    idt[219].set_handler_fn(interrupt219);
    idt[220].set_handler_fn(interrupt220);
    idt[221].set_handler_fn(interrupt221);
    idt[222].set_handler_fn(interrupt222);
    idt[223].set_handler_fn(interrupt223);
    idt[224].set_handler_fn(interrupt224);
    idt[225].set_handler_fn(interrupt225);
    idt[226].set_handler_fn(interrupt226);
    idt[227].set_handler_fn(interrupt227);
    idt[228].set_handler_fn(interrupt228);
    idt[229].set_handler_fn(interrupt229);
    idt[230].set_handler_fn(interrupt230);
    idt[231].set_handler_fn(interrupt231);
    idt[232].set_handler_fn(interrupt232);
    idt[233].set_handler_fn(interrupt233);
    idt[234].set_handler_fn(interrupt234);
    idt[235].set_handler_fn(interrupt235);
    idt[236].set_handler_fn(interrupt236);
    idt[237].set_handler_fn(interrupt237);
    idt[238].set_handler_fn(interrupt238);
    idt[239].set_handler_fn(interrupt239);
    idt[240].set_handler_fn(interrupt240);
    idt[241].set_handler_fn(interrupt241);
    idt[242].set_handler_fn(interrupt242);
    idt[243].set_handler_fn(interrupt243);
    idt[244].set_handler_fn(interrupt244);
    idt[245].set_handler_fn(interrupt245);
    idt[246].set_handler_fn(interrupt246);
    idt[247].set_handler_fn(interrupt247);
    idt[248].set_handler_fn(interrupt248);
    idt[249].set_handler_fn(interrupt249);
    idt[250].set_handler_fn(interrupt250);
    idt[251].set_handler_fn(interrupt251);
    idt[252].set_handler_fn(interrupt252);
    idt[253].set_handler_fn(interrupt253);
    idt[254].set_handler_fn(interrupt254);
    idt[255].set_handler_fn(interrupt255);
}
